{"ast":null,"code":"import _slicedToArray from\"C:/Users/mohit/Desktop/webdev/munchin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import MainPage from\"./MainPage\";import Login from\"./Components/Login/Login\";import MainHeader from\"./Components/MainHeader/MainHeader\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];useEffect(function(){var storedUserLoggedInInformation=localStorage.getItem('isLoggedIn');if(storedUserLoggedInInformation==='1'){setIsLoggedIn(true);}},[]);var loginHandler=function loginHandler(email,password){// We should of course check email and password\n// But it's just a dummy/ demo anyways\nlocalStorage.setItem('isLoggedIn','1');setIsLoggedIn(true);};var logoutHandler=function logoutHandler(){localStorage.setItem('isLoggedIn','0');setIsLoggedIn(false);};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"main\",{children:[!isLoggedIn&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MainHeader,{isAuthenticated:isLoggedIn,onLogout:logoutHandler}),/*#__PURE__*/_jsx(Login,{onLogin:loginHandler})]}),isLoggedIn&&/*#__PURE__*/_jsx(MainPage,{onLogout:logoutHandler})]})});}export default App;","map":{"version":3,"sources":["C:/Users/mohit/Desktop/webdev/munchin/src/App.js"],"names":["React","useState","useEffect","MainPage","Login","MainHeader","App","isLoggedIn","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,C,wFACA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAoCL,QAAQ,CAAC,KAAD,CAA5C,wCAAOM,UAAP,eAAmBC,aAAnB,eAEAN,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,6BAA6B,CAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC,CAEA,GAAIF,6BAA6B,GAAK,GAAtC,CAA2C,CACzCD,aAAa,CAAC,IAAD,CAAb,CACD,CACF,CANQ,CAMN,EANM,CAAT,CAQA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxC;AACA;AACAJ,YAAY,CAACK,OAAb,CAAqB,YAArB,CAAkC,GAAlC,EACAP,aAAa,CAAC,IAAD,CAAb,CACD,CALD,CAOA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BN,YAAY,CAACK,OAAb,CAAqB,YAArB,CAAkC,GAAlC,EACAP,aAAa,CAAC,KAAD,CAAb,CACD,CAHD,CAKA,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,wBACG,CAACD,UAAD,eAAe,oCAAK,KAAC,UAAD,EAAY,eAAe,CAAEA,UAA7B,CAAyC,QAAQ,CAAES,aAAnD,EAAL,cAChB,KAAC,KAAD,EAAO,OAAO,CAAEJ,YAAhB,EADgB,GADlB,CAGGL,UAAU,eAAI,KAAC,QAAD,EAAU,QAAQ,CAAES,aAApB,EAHjB,GADF,EADF,CASD,CAED,cAAeV,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport MainPage from \"./MainPage\";\nimport Login from \"./Components/Login/Login\";\nimport MainHeader from \"./Components/MainHeader/MainHeader\";\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn','1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.setItem('isLoggedIn','0');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <main>\n        {!isLoggedIn && <div><MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n        <Login onLogin={loginHandler} /></div>}\n        {isLoggedIn && <MainPage onLogout={logoutHandler}/>}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}