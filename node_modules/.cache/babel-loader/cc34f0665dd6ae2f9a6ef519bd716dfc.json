{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\Desktop\\\\webdev\\\\experiment\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MainPage from \"./MainPage\";\nimport Login from \"./Components/Login/Login\";\nimport MainHeader from \"./Components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n          isAuthenticated: isLoggedIn,\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(MainPage, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mohit/Desktop/webdev/experiment/src/App.js"],"names":["React","useState","useEffect","MainPage","Login","MainHeader","App","isLoggedIn","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AAEA,QAAIF,6BAA6B,KAAK,GAAtC,EAA2C;AACzCD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAkC,GAAlC;AACAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AAC1BR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAA,iBACG,CAACD,UAAD,iBAAe;AAAA,gCAAK,QAAC,UAAD;AAAY,UAAA,eAAe,EAAEA,UAA7B;AAAyC,UAAA,QAAQ,EAAES;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAAL,eAChB,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADgB;AAAA;AAAA;AAAA;AAAA;AAAA,cADlB,EAGGL,UAAU,iBAAI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAES;AAApB;AAAA;AAAA;AAAA;AAAA,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/BQV,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport MainPage from \"./MainPage\";\nimport Login from \"./Components/Login/Login\";\nimport MainHeader from \"./Components/MainHeader/MainHeader\";\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn','1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <main>\n        {!isLoggedIn && <div><MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n        <Login onLogin={loginHandler} /></div>}\n        {isLoggedIn && <MainPage onLogout={logoutHandler}/>}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}