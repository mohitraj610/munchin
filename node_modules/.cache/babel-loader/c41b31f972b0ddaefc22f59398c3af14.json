{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\Desktop\\\\webdev\\\\Intern_Task\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport back from '../../assets/back.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['main-image'],\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.login,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: enteredEmail,\n            onChange: emailChangeHandler,\n            onBlur: validateEmailHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: enteredPassword,\n            onChange: passwordChangeHandler,\n            onBlur: validatePasswordHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: classes.btn,\n            disabled: !formIsValid,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"+PPrEsivx95YePWUXKwtgIvau7o=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/mohit/Desktop/webdev/Intern_Task/src/Components/Login/Login.js"],"names":["React","useState","Card","classes","Button","back","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailChangeHandler","event","target","value","includes","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,EAAtD;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMiB,kBAAkB,GAAIC,KAAD,IAAW;AACpCV,IAAAA,eAAe,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAEAJ,IAAAA,cAAc,CACZE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,QAAnB,CAA4B,GAA5B,KAAoCV,eAAe,CAACW,IAAhB,GAAuBC,MAAvB,GAAgC,CADxD,CAAd;AAGD,GAND;;AAQA,QAAMC,qBAAqB,GAAIN,KAAD,IAAW;AACvCN,IAAAA,kBAAkB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AAEAJ,IAAAA,cAAc,CACZE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBE,IAAnB,GAA0BC,MAA1B,GAAmC,CAAnC,IAAwChB,YAAY,CAACc,QAAb,CAAsB,GAAtB,CAD5B,CAAd;AAGD,GAND;;AAQA,QAAMI,oBAAoB,GAAG,MAAM;AACjCf,IAAAA,eAAe,CAACH,YAAY,CAACc,QAAb,CAAsB,GAAtB,CAAD,CAAf;AACD,GAFD;;AAIA,QAAMK,uBAAuB,GAAG,MAAM;AACpCZ,IAAAA,kBAAkB,CAACH,eAAe,CAACW,IAAhB,GAAuBC,MAAvB,GAAgC,CAAjC,CAAlB;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAIT,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACU,cAAN;AACAtB,IAAAA,KAAK,CAACuB,OAAN,CAActB,YAAd,EAA4BI,eAA5B;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAET,OAAO,CAAC,YAAD,CAAvB;AAAA,6BACF;AAAK,QAAA,GAAG,EAAEE;AAAV;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADF,eAIA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,OAAO,CAAC4B,KAAzB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEH,aAAhB;AAAA,gCACE;AACE,UAAA,SAAS,EAAG,GAAEzB,OAAO,CAAC6B,OAAQ,IAC5BtB,YAAY,KAAK,KAAjB,GAAyBP,OAAO,CAAC8B,OAAjC,GAA2C,EAC5C,EAHH;AAAA,kCAKE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,KAAK,EAAEzB,YAHT;AAIE,YAAA,QAAQ,EAAEU,kBAJZ;AAKE,YAAA,MAAM,EAAEQ;AALV;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AACE,UAAA,SAAS,EAAG,GAAEvB,OAAO,CAAC6B,OAAQ,IAC5BlB,eAAe,KAAK,KAApB,GAA4BX,OAAO,CAAC8B,OAApC,GAA8C,EAC/C,EAHH;AAAA,kCAKE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,KAAK,EAAErB,eAHT;AAIE,YAAA,QAAQ,EAAEa,qBAJZ;AAKE,YAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eA6BE;AAAK,UAAA,SAAS,EAAExB,OAAO,CAAC+B,OAAxB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAE/B,OAAO,CAACgC,GAAzC;AAA8C,YAAA,QAAQ,EAAE,CAACnB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAhFD;;GAAMV,K;;KAAAA,K;AAkFN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Login.module.css';\r\nimport Button from '../UI/Button/Button';\r\nimport back from '../../assets/back.jpg';\r\n\r\nconst Login = (props) => {\r\n  const [enteredEmail, setEnteredEmail] = useState('');\r\n  const [emailIsValid, setEmailIsValid] = useState();\r\n  const [enteredPassword, setEnteredPassword] = useState('');\r\n  const [passwordIsValid, setPasswordIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n\r\n    setFormIsValid(\r\n      event.target.value.includes('@') && enteredPassword.trim().length > 6\r\n    );\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n\r\n    setFormIsValid(\r\n      event.target.value.trim().length > 6 && enteredEmail.includes('@')\r\n    );\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    setEmailIsValid(enteredEmail.includes('@'));\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    setPasswordIsValid(enteredPassword.trim().length > 6);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onLogin(enteredEmail, enteredPassword);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes['main-image']}>\r\n    <img src={back} />\r\n    </div>\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <div\r\n          className={`${classes.control} ${\r\n            emailIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={enteredEmail}\r\n            onChange={emailChangeHandler}\r\n            onBlur={validateEmailHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${classes.control} ${\r\n            passwordIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={enteredPassword}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={validatePasswordHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}